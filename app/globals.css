/* app/globals.css */

/* Define CSS variables for themes */
:root {
    --bg-color: #0d1117;
    --surface-color: #161b22;
    --primary-color: #39ff14;
    --primary-variant-color: #3700b3; /* Unused in provided CSS, but kept */
    --text-color: #e6edf3;
    --text-secondary-color: #8b949e;
    --border-color: #30363d;
    --glow-color: rgba(57, 255, 20, 0.2);
    --cyber-glow-color: rgba(57, 255, 20, 0.4);
}

/* Universal box-sizing reset */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Smooth scrolling and padding for fixed header */
html {
    /* scroll-behavior: smooth; */ /* Handled by JavaScript for better control with Next.js Link */
    scroll-padding-top: 80px; /* Offset for fixed header */
}

/* Base body styles */
body {
    font-family: var(--font-fira-code), monospace; /* Use the Fira Code font variable */
    background-color: var(--bg-color);
    color: var(--text-color);
    line-height: 1.6;
    position: relative;
    overflow-x: hidden; /* Prevent horizontal scroll from glitch effect */
}

/* Scanline/CRT effect on body background */
body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(rgba(18, 18, 18, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.03), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.03));
    background-size: 100% 3px, 4px 100%;
    z-index: -1;
    pointer-events: none;
    opacity: 0.5;
    animation: scanline 20s linear infinite;
}

@keyframes scanline {
    0% {
        background-position: 0 0, 0 0;
    }
    100% {
        background-position: 0 100vh, 0 0;
    }
}

/* Styles for the particle canvas (component renders this ID) */
#particle-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
    opacity: 0.3;
}

/* Anchor tag styles */
a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.3s ease;
}

a:hover {
    color: white;
}

/* Heading styles */
h1, h2, h3 {
    line-height: 1.2;
    margin-bottom: 1rem;
    font-weight: 600;
}

h1 { font-size: 3rem; position: relative; display: inline-block; }
h2 { font-size: 2.5rem; color: var(--primary-color); text-shadow: 0 0 10px var(--glow-color); }
h3 { font-size: 1.5rem; }

/* Paragraph styles */
p {
    margin-bottom: 1rem;
    color: var(--text-secondary-color);
}

/* Image styles */
img {
    max-width: 100%;
    height: auto;
    display: block;
}

/* Header & Nav */
header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    padding: 1rem 5%;
    background-color: rgba(18, 18, 18, 0.8);
    backdrop-filter: blur(10px);
    z-index: 1000;
    border-bottom: 1px solid var(--border-color);
}

nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
}

.logo {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--primary-color);
    text-shadow: 0 0 5px var(--glow-color);
}

.nav-links {
    list-style: none;
    display: flex;
    gap: 2rem;
}

.nav-links a {
    font-weight: 400;
    position: relative;
    padding-bottom: 5px;
}

.nav-links a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--primary-color);
    transition: width 0.3s ease;
}

.nav-links a:hover::after, .nav-links a.active::after {
    width: 100%;
}

/* Hero Section */
.hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 5%;
    background-color: var(--bg-color);
    position: relative; /* This is crucial for positioning the scroll-down-indicator */
    overflow: hidden; /* Prevent indicator from causing scrollbar issues if it peeks out */
}

.hero-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3rem;
    max-width: 1200px;
    width: 100%;
}

.hero-content {
    max-width: 700px;
    text-align: left;
    position: relative;
    z-index: 2;
}

.hero-content h1 {
    min-height: 5rem; /* Ensure space for text as it types */
    position: relative;
    color: var(--text-color);
    text-shadow: 0 0 5px rgba(255,255,255,0.1);
}

.hero-content h1 .cursor {
    display: inline-block;
    background-color: var(--primary-color);
    width: 1rem;
    height: 3rem;
    margin-left: 0.5rem;
    animation: blink 1s step-end infinite;
    box-shadow: 0 0 10px var(--glow-color);
}

@keyframes blink {
    from, to { background-color: transparent; }
    50% { background-color: var(--primary-color); }
}

/* Glitch effect for hero heading */
.hero-content h1::before,
.hero-content h1::after {
    content: attr(data-text); /* Content is pulled from data-text attribute */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--bg-color);
    overflow: hidden;
    color: var(--text-color);
}

.hero-content h1::before {
    left: 3px;
    text-shadow: -2px 0 var(--primary-color);
    animation: glitch-anim-1 3s infinite linear alternate-reverse;
}

.hero-content h1::after {
    left: -3px;
    text-shadow: -2px 0 #ff00c1, 3px 3px #00fff9;
    animation: glitch-anim-2 3s infinite linear alternate-reverse;
}

@keyframes glitch-anim-1 {
    0% { clip-path: inset(15% 0 86% 0); }
    10% { clip-path: inset(5% 0 80% 0); }
    20% { clip-path: inset(95% 0 2% 0); }
    30% { clip-path: inset(66% 0 30% 0); }
    40% { clip-path: inset(45% 0 53% 0); }
    50% { clip-path: inset(10% 0 58% 0); }
    60% { clip-path: inset(89% 0 3% 0); }
    70% { clip-path: inset(49% 0 49% 0); }
    80% { clip-path: inset(2% 0 95% 0); }
    90% { clip-path: inset(55% 0 35% 0); }
    100% { clip-path: inset(89% 0 5% 0); }
}

@keyframes glitch-anim-2 {
    0% { clip-path: inset(80% 0 15% 0); }
    10% { clip-path: inset(34% 0 55% 0); }
    20% { clip-path: inset(1% 0 98% 0); }
    30% { clip-path: inset(78% 0 10% 0); }
    40% { clip-path: inset(33% 0 63% 0); }
    50% { clip-path: inset(92% 0 2% 0); }
    60% { clip-path: inset(70% 0 25% 0); }
    70% { clip-path: inset(30% 0 68% 0); }
    80% { clip-path: inset(60% 0 38% 0); }
    90% { clip-path: inset(12% 0 85% 0); }
    100% { clip-path: inset(95% 0 3% 0); }
}

.hero .subtitle {
    font-size: 1.25rem;
    color: var(--text-secondary-color);
    margin-bottom: 2rem;
}

/* New styles for the scroll-down indicator */
.scroll-down-indicator {
    position: absolute;
    bottom: 30px; /* Distance from the bottom of the hero section */
    left: 50%;
    transform: translateX(-50%); /* Center horizontally */
    display: flex;
    flex-direction: column; /* Stack arrow and text */
    align-items: center;
    gap: 8px; /* Space between arrow and text */
    color: var(--primary-color); /* Match the primary theme color */
    text-shadow: 0 0 10px var(--glow-color); /* Apply a subtle glow */
    cursor: pointer;
    transition: transform 0.3s ease, color 0.3s ease, text-shadow 0.3s ease;
    animation: bounceUpDown 2s infinite ease-in-out; /* Add a subtle bounce animation */
    z-index: 10; /* Ensure it's above background elements */
    font-size: 0.9rem; /* Adjust font size */
    font-weight: 600;
}

.scroll-down-indicator:hover {
    color: white; /* Brighter on hover */
    transform: translateX(-50%) translateY(-5px); /* Slight lift on hover */
    text-shadow: 0 0 15px var(--cyber-glow-color); /* Stronger glow on hover */
}

.scroll-down-indicator svg {
    fill: currentColor; /* Inherit color from parent */
    width: 36px;
    height: 36px;
    transition: transform 0.3s ease; /* Smooth arrow movement */
}

/* Keyframes for the bounce animation */
@keyframes bounceUpDown {
    0%, 100% {
        transform: translateX(-50%) translateY(0);
    }
    50% {
        transform: translateX(-50%) translateY(-10px); /* Move up 10px */
    }
}

/* Optional: Hide "Scroll Down" text on very small screens if space is tight */
@media (max-width: 480px) {
    .scroll-down-indicator span {
        display: none;
    }
    .scroll-down-indicator {
        bottom: 20px;
    }
}

/* Call to action button */
.cta-button {
    display: inline-block;
    padding: 12px 24px;
    background-color: transparent;
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
    border-radius: 0;
    font-weight: 600;
    font-family: var(--font-fira-code), monospace; /* Use the Fira Code font variable */
    transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
    text-shadow: 0 0 5px rgba(0,0,0,0.5);
}

.cta-button:hover {
    background-color: var(--primary-color);
    color: var(--bg-color);
    box-shadow: 0 0 20px var(--glow-color);
}

/* Content Sections - for fade-in effect */
.content-section {
    padding: 6rem 5%;
    max-width: 1200px;
    margin: 0 auto;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}
.content-section.visible {
    opacity: 1;
    transform: translateY(0);
}

.content-section h2 {
    text-align: center;
    margin-bottom: 3rem;
}

/* About Section */
.about-container {
    display: flex;
    gap: 3rem;
    align-items: center;
}
.profile-pic {
    width: 250px; /* Define the fixed size of the circular container */
    height: 250px;
    border-radius: 50%; /* Make the container perfectly circular */
    overflow: hidden; /* Crucial: Clips the square image within the rounded border */
    border: 3px solid var(--primary-color);
    position: relative; /* Required for Next.js Image with 'fill' prop to work */
    /* Add display: inline-block; if the parent flex/grid item is not allowing fixed width/height */
    /* display: inline-block; */
}

/* Ensure the actual <img> tag generated by Next.js Image component fills its container */
.profile-pic > img {
    object-fit: cover; /* Maintain aspect ratio and cover the container */
    /* width: 100%; */ /* These are implicitly handled by Next.js Image with fill */
    /* height: 100%; */
}

/* Keep .hero-profile-pic for the box-shadow, apply it alongside .profile-pic */
.hero-profile-pic {
    box-shadow: 0 0 25px var(--glow-color);
}



.about-text {
    flex: 1;
}

.skills-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-top: 1.5rem;
}

.skills-list span {
    background-color: var(--surface-color);
    padding: 0.5rem 1rem;
    border-radius: 0;
    font-size: 0.9rem;
    border: 1px solid var(--border-color);
}

/* Experience Section (Timeline) */
.timeline {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    padding-left: 30px;
    border-left: 2px solid var(--border-color);
}
.timeline::after {
    content: '';
    position: absolute;
    left: -2px;
    top: 0;
    width: 2px;
    height: 100%;
    background: var(--primary-color);
    transform: scaleY(0);
    transform-origin: top;
    transition: transform 1s cubic-bezier(0.19, 1, 0.22, 1);
    box-shadow: 0 0 15px var(--glow-color);
}

/* Animation for timeline line */
.timeline.visible::after { /* Target the timeline directly */
    transform: scaleY(1);
    transition-delay: 0.2s;
}

.timeline-item {
    margin-bottom: 2rem;
    position: relative;
    opacity: 0;
    transform: translateX(-30px) rotate(-3deg) scale(0.95);
    transform-origin: left center;
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}
.timeline-item.visible {
    opacity: 1;
    transform: translateX(0) rotate(0deg) scale(1);
}
.timeline-item::before {
    content: '';
    position: absolute;
    left: -39px;
    top: 5px;
    width: 15px;
    height: 15px;
    background-color: var(--primary-color);
    border-radius: 50%;
    border: 3px solid var(--bg-color);
    box-shadow: 0 0 10px var(--glow-color);
}
.timeline-content h3 {
    color: var(--text-color);
    font-size: 1.25rem;
}
.timeline-company {
    color: var(--primary-color);
    font-weight: 600;
    margin-bottom: 0.5rem;
}

/* Education Section */
.education-card {
    background-color: var(--surface-color);
    padding: 2rem;
    border: 1px solid var(--border-color);
    /* Removed max-width and margin auto here as it's typically within timeline-item */
}
.education-card h3 {
    color: var(--primary-color);
}
.education-card p {
    margin-bottom: 0.5rem;
}

/* Awards Section */
.awards-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 900px;
    margin: 0 auto;
}

.award-card {
    display: flex;
    align-items: center;
    gap: 2rem;
    background-color: var(--surface-color);
    border: 1px solid var(--border-color);
    padding: 1.5rem;
    transition: all 0.3s ease;
}

.award-card:hover {
    border-color: var(--primary-color);
    transform: translateY(-5px);
    box-shadow: 0 0 20px var(--cyber-glow-color);
}

.award-image {
    flex-shrink: 0;
}

.award-image img {
    width: 80px;
    height: 80px;
    object-fit: contain;
}

.award-content h3 {
    margin-bottom: 0.25rem;
    color: var(--text-color);
    font-size: 1.25rem;
}

.award-issuer {
    color: var(--primary-color);
    font-weight: 600;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
}

.award-content p {
    margin-bottom: 0;
    font-size: 1rem;
}

@media (max-width: 500px) {
    .award-card {
        flex-direction: column;
        text-align: center;
        gap: 1.5rem;
    }
}

/* Gallery Section */
.gallery-grid {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-auto-rows: 20vw;
    grid-auto-flow: dense;
    gap: 1.5rem;
}

.gallery-item {
    overflow: hidden;
    position: relative;
    border: 2px solid var(--border-color);
    box-shadow: 0 10px 30px rgba(0,0,0,0.5);
    transition: border-color 0.4s ease, transform 0.4s ease, box-shadow 0.4s ease;
}

.gallery-item:hover {
    transform: scale(1.03);
    border-color: var(--primary-color);
    box-shadow: 0 0 25px var(--cyber-glow-color);
    z-index: 10;
}

.gallery-item img { /* Next.js Image component handles these via style prop */
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.8s ease-out;
}

.gallery-item.item-1 { grid-column: 1 / span 3; grid-row: span 1; }
.gallery-item.item-2 { grid-column: 4 / span 3; grid-row: span 1; }
.gallery-item.item-3 { grid-column: 1 / span 4; grid-row: span 2; }
.gallery-item.item-4 { grid-column: 5 / span 2; grid-row: span 1; }
.gallery-item.item-5 { grid-column: 5 / span 2; grid-row: span 1; }

@media (max-width: 768px) {
    .gallery-grid {
        grid-template-columns: 1fr;
        grid-auto-rows: 50vw;
    }
    .gallery-item {
        grid-column: auto !important;
        grid-row: auto !important;
    }
}

/* Projects Section */
.project-grid {
    /* Change from grid to flexbox */
    display: flex; 
    flex-wrap: wrap; /* Allow cards to wrap to the next line */
    justify-content: center; /* Center the cards within the available space */
    gap: 2rem; /* Keep the gap between cards */
    /* Remove grid-template-columns as we are now using flexbox */
}

.project-card {
    background-color: var(--surface-color);
    padding: 2rem;
    border-radius: 0;
    border: 1px solid var(--border-color);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    /* --- Add Fixed Size Here --- */
    width: 320px;  /* Define a fixed width */
    height: 400px; /* Define a fixed height */
    overflow: hidden; /* Important: Ensures content doesn't break out if it's too long */
    /* ------------------------ */
}
.project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 0 25px var(--cyber-glow-color);
    border-color: var(--primary-color);
}

.project-card:hover h3::after {
    content: '_';
    animation: blink 1s step-end infinite;
    display: inline-block;
    margin-left: 5px;
    color: var(--primary-color);
}

.project-card h3 {
    color: var(--primary-color);
}
.project-card p {
    flex-grow: 1; /* This will make the paragraph take up available vertical space */
    /* If content frequently overflows, consider `overflow-y: auto;` here,
       but it would introduce scrollbars within the card. */
}

.project-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 1rem 0;
}

.project-tech span {
    background-color: var(--bg-color);
    padding: 0.25rem 0.75rem;
    border-radius: 0;
    font-size: 0.8rem;
    border: 1px solid var(--border-color);
}

.project-links a {
    margin-right: 0;
    font-weight: 600;
    display: block;
    text-align: center;
    margin-top: auto; /* Pushes the link button to the bottom of the fixed-height card */
}

/* Contact Section */
#contact {
    text-align: center;
}

#contact p {
    max-width: 600px;
    margin: 0 auto 2rem;
}

.social-links {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
    gap: 1.5rem;
}

.social-links a svg {
    width: 32px;
    height: 32px;
    fill: var(--text-secondary-color);
    transition: fill 0.3s ease, transform 0.3s ease;
}
.social-links a:hover svg {
    fill: var(--primary-color);
    transform: translateY(-3px);
}

/* Project Detail Page */
.project-detail-header {
    text-align: center;
    padding: 6rem 5% 2rem;
    border-bottom: 1px solid var(--border-color);
}

.project-detail-header .subtitle {
    font-size: 1.2rem;
    color: var(--text-secondary-color);
    margin-bottom: 2rem;
}

.project-detail-content {
    padding: 4rem 5%;
    max-width: 900px;
    margin: 0 auto;
}

.project-detail-content h3 {
    color: var(--primary-color);
    margin-top: 2rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.5rem;
}

.project-detail-content .project-tech {
    margin-bottom: 2rem;
}

.project-detail-links {
    margin-top: 3rem;
    display: flex;
    gap: 1rem;
    justify-content: flex-start;
}

.back-to-projects {
    display: block;
    margin: 4rem auto 0;
    text-align: center;
    color: var(--primary-color);
    font-weight: 600;
}

/* Footer */
footer {
    text-align: center;
    padding: 2rem 5%;
    background-color: var(--surface-color);
    border-top: 1px solid var(--border-color);
    font-size: 0.9rem;
    color: var(--text-secondary-color);
}

/* Theme Switcher */
.theme-switcher {
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 1001;
}

.theme-icon {
    width: 50px;
    height: 50px;
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.3s ease;
}
.theme-icon:hover {
    transform: rotate(90deg);
}
.theme-icon svg {
    fill: var(--text-secondary-color);
    transition: fill 0.3s ease;
}
.theme-icon:hover svg {
    fill: var(--primary-color);
}

.color-palette {
    position: absolute;
    bottom: 65px;
    right: 0;
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    padding: 10px;
    display: flex;
    gap: 10px;
    border-radius: 5px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s ease;
}

.theme-switcher.open .color-palette {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.color-option {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid var(--bg-color);
    transition: transform 0.2s ease;
}
.color-option:hover {
    transform: scale(1.1);
}

/* Responsive */
@media (max-width: 768px) {
    h1 { font-size: 2.5rem; }
    h2 { font-size: 2rem; }
    
    .nav-links {
        display: none; /* Simplification for this example. A real site would use a hamburger menu. */
    }

    .hero-container {
        flex-direction: column;
        text-align: center;
        gap: 2rem;
        margin-top: 5rem;
    }

    .hero-content {
        text-align: center;
        max-width: 100%;
    }
    
    .about-container {
        flex-direction: column;
        text-align: center;
    }
}